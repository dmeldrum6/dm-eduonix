def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board, player):
    # Check rows, columns and diagonals for a win
    for i in range(3):
        if all(board[i][j] == player for j in range(3)):
            return True
        if all(board[j][i] == player for j in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)):
        return True
    if all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def get_free_positions(board):
    return [(i, j) for i in range(3) for j in range(3) if board[i][j] == " "]

def tic_tac_toe():
    board = [[" " for _ in range(3)] for _ in range(3)]
    players = ['X', 'O']
    turn = 0

    while True:
        current_player = players[turn % 2]
        print(f"Player {current_player}'s turn.")
        print_board(board)

        # Get input from player
        try:
            row, col = map(int, input("Enter row and column numbers to place your mark (0-2): ").split())
            if board[row][col] != " ":
                print("This position is already taken. Please choose another.")
                continue
        except (ValueError, IndexError):
            print("Invalid input. Please enter row and column numbers between 0 and 2.")
            continue

        # Place the mark
        board[row][col] = current_player

        # Check for a win or tie
        if check_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break

        if not get_free_positions(board):
            print_board(board)
            print("It's a tie!")
            break

        turn += 1

if __name__ == "__main__":
    tic_tac_toe()
